* GalaxyTrade 

** GalaxyTrade的详细设计
1) Parser接口
   它是程序的核心, 它内部包含两个静态的功能类:NumerTransalator 和 PriceCalculator.
   1. NumberTransalator用于将单词表示的数字转换成整数,如"glob glob"可以转换成整数2.
   2. PriceCalculator 用于存储商品的价格信息, 并根据商品价格表计算一批商品的价格.
 
2) 有四个类实现Parser接口,分别对四种输入的语句进行解析.
   1. MappingParser: 解析Mapping语句,如"glob is I", 初始化NumberTransalator.
   2. GoodsInfoParser: 解析商品信息语句,如"glob glob Silver is 34",并初始化PriceCalculator.
   3. NumberQuestionParser: 解析数字问题, 如"How much is glob glob ?",并利用NumberTransalator给出回答.
   4. PriceQuestionParser: 解析商品价格问题, 如"How many Credits is glob golb Silver ?",并利用NumberTransalator和PriceCalculator给出回答
      
3) 客户端代码是GalaxyTrade类. 它负责从输入文件中读入一行, 对这一行正则判定,使用工厂模式生成相应的Parser,进行解析,把解析的结果输出到文件.
** 程序如何运行:
   main函数再GalaxyTrade类中,运行它需要提供两个参数:
   1)  第一个参数是输入文件,包含完整路径, 如 "/home/chris/IdeaProjects/GalaxyTrade/src/sampleInput"
       内容可以是
      #+BEGIN_SRC 
glob is I
prok is V
pish is X
tegj is L
glob glob Silver is 34 Credits
glob prok Gold is 57800 Credits
pish pish Iron is 3910 Credits
how much is pish pish pish prok ?
how much is pish tegj glob glob ?
how many Credits is glob prok Silve ?
how many Credits is glob prok Gold ?
how many Credits is glob prok Iron ?
how much wood could a woodchuck chuck if a woodchuck could chuck wood ?
      #+END_SRC
   2) 第二个参数是输出文件,包含完整路径,如 "/home/chris/IdeaProjects/GalaxyTrade/src/result".
      程序运行后,运行结构会输出到这个文件里,它的内容可能是
      #+BEGIN_SRC 
pish pish pish prok is 35
pish tegj glob glob is 42
Input Errors in 10: Silve is invalid goods name!
glob prok Gold is 57800 Credits
glob prok Iron is 782 Credits
I have no idea what you are talking about
      #+END_SRC
      
** 关于输入的一些假定
   1. 输入文件按行输入,一行仅包含一条句子.
   2. 正确的Mapping语句格式是"xxx is X", 包含三个单词, 第二个是"is", 第三个是一个罗马数字的字符.
   3. 正确的商品信息语句格式是"xx GoodsName is 34 Credits" 倒数第二个单词是商品总价,是个数字,倒数第三个是"is",倒数第四个商品名称,商品名称前是商品的数量信息.
   4. 正确的数字问题的格式是"how much is xxx ?" 前三个单词分别是"how much is" 最后是"?" 中间是数量信息.
   5. 正确的价格问题的格式是"how many Credits is xxxx xx GoodsName ?" 前四个单词是"how many Credits is" 最后是问号"?",倒数第二个是商品名称.第五个单词开始到商品名称为止,是商品数量.
